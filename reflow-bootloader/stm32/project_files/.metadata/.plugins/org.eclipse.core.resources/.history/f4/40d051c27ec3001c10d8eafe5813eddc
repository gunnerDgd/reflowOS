#include "stm32f4xx_ll_rcc.h"

namespace reflow_bootloader {
namespace hardware_specific {
namespace clocking			{

	/*
	 * class "internal_clock_prescaler"
	 *
	 * 	--> Set Main Clock Souce to HSI (Internal Clock Oscillator)
	 * 	--> USE LL_RCC_PLLSOURCE_HSI
	 */
	class internal_clock_prescaler
	{
	public:
		using  coefficient_type = std::uint8_t;
		struct prescale_coefficient;
	public:
		constexpr internal_clock_prescaler();
				 ~internal_clock_prescaler();

	public:
		void toggle  (); 				// Toggle Presccaler
		bool ready   (); 				// Check if Prescaler is ready for use.

		void 		  			scale_to	(coefficient_type);
		constexpr std::uint32_t clock_source()				  ;
	};

	/*
	* class "external_clock_prescaler"
	*
	* 	--> Set Main Clock Souce to HSE (External Clock Oscillator)
	* 	--> USE LL_RCC_PLLSOURCE_HSE
	*/
	class external_clock_prescaler
	{
	public:
		using  coefficient_type = std::uint8_t;
		struct prescale_coefficient;
	public:
		constexpr external_clock_prescaler();
				 ~external_clock_prescaler();

	public:
		void toggle  (); 				// Toggle Presccaler
		bool ready   (); 				// Check if Prescaler is ready for use.

		void 		  			scale_to	(coefficient_type);
		constexpr std::uint32_t clock_source()				  ;
	};

	struct internal_clock_prescaler::prescale_coefficient
	{
		using coefficient_type = std::uint32_t;
		prescale_coefficient(coefficient_type m = 2  ,
							 coefficient_type n = 200,
							 coefficient_type q = 2) ;

	private:
		coefficient_type __M_prescale_coff;
	};

}
}
}
