#include <reflow_bootloader/hardware_specific/stm32/clocking/f401_clock.hpp>
#include <reflow_bootloader/clock/system_clock.hpp>

namespace reflow_bootloader {
namespace clocking 			{

	struct system_clock::configuration
	{
		friend class system_clock;
		using native_handle_type = std::uint32_t;
		using prescaler_type     = std::uint32_t;

		enum class sources : native_handle_type
		{
			internal_oscillator = LL_RCC_SYS_CLKSOURCE_HSI,
			external_oscillator = LL_RCC_SYS_CLKSOURCE_HSE,
			prescaled 			= LL_RCC_SYS_CLKSOURCE_PLL
		};

		configuration(sources 		src  = sources::internal_oscillator,
					  prescale_type pres = 2);

	private:
		native_handle_type __M_clksrc_handle   ;
		prescacle_type     __M_clksrc_prescaler;

	};

}
}

reflow_bootloader::clocking::system_clock::configuration::configuration(sources src, prescale_type pres)
	 : __M_clksrc_handle   ((native_handle_type)src),
	   __M_clksrc_prescaler()
{

}
