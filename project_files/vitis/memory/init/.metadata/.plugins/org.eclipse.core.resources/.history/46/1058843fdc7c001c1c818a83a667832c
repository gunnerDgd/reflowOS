#include <reflowOS/base/memory/hardware/microblaze/mb_memory_traits.hpp>

using namespace reflowOS::hardware_specific::microblaze;

void						 memory_traits::initialize()
{
	MB_MEMORY_ITERATE_TAG_BEGIN(it_tag)
		block_manage_address[it_tag].attached_pointer = block_base_address + block_size * it_tag;
		block_manage_address[it_tag].attached_process = 0;
	MB_MEMORY_ITERATE_TAG_END
}

void						 memory_traits::shutdown ()
{

}

typename memory_traits::alloc_pointer memory_traits::allocate  (alloc_process alloc_proc, size_type alloc_count)
{
	alloc_pointer alloc_ptr = nullptr;
	for			 (alloc_size it_alloc = 0 ; it_alloc < block_entire_count ; it_alloc++)
	{
		alloc_size aligned = check_aligned();
	}

}

void		  				 		  memory_traits::deallocate(alloc_process alloc_proc, size_type alloc_count, alloc_pointer alloc_hint)
{

}

typename memory_traits::alloc_size    memory_traits::check_aligned(alloc_size alloc_count, alloc_size alloc_index)
{
	alloc_size alloc_index_begin = alloc_index,
			   alloc_index_end   = alloc_index_begin + alloc_count;

	for(size_type it_chk = alloc_index_begin ; it_chk < alloc_index_end ; it_chk++)
		if(block_manage_address[it_chk].attached_process != 0)
			return it_chk;

	return 0;
}
