#include <cstdint>
#include <cstddef>

#include <xparameters.h>

#define MEMORY_STATIC(type) constexpr static type

namespace reflowOS::memory {

	typedef std::uint32_t size_type;
	typedef void* 		  pointer_type;

	MEMORY_STATIC(size_type)    megabyte = 1024 * 1024;
	MEMORY_STATIC(size_type)    kilobyte = 1024;

	MEMORY_STATIC(size_type) 	total_size = 128 * megabyte; // Size of the Entire Memory.
	MEMORY_STATIC(size_type) 	block_size = 4   * kilobyte; // Size of the Memory Page.

	MEMORY_STATIC(size_type)    block_manage_count   = 32;
	MEMORY_STATIC(size_type)    block_entire_count   = (total_size / block_size) - block_manage_count;

	MEMORY_STATIC(pointer_type) block_memory_base    = XPAR_MIG_7SERIES_0_BASEADDR + 128 * megabyte;
	MEMORY_STATIC(pointer_type) block_manage_address = block_memory_base;
	MEMORY_STATIC(pointer_type) block_base_addres    = block_memory_base + block_manage_count * block_size;


	typedef std::uint8_t block_context[];
	struct 				 block_tag
	{
		typedef std::uint32_t block_process_id;
		typedef pointer_type  block_pointer;

		block_process_id attached_process;
		block_pointer	 attached_pointer;
	};
}
