#include <reflowOS/base/memory/hardware/microblaze/mb_memory_traits.hpp>

using namespace reflowOS::hardware_specific::microblaze;

void						 memory_traits::initialize()
{
	MB_MEMORY_ITERATE_TAG_BEGIN(it_tag)
		block_manage_address[it_tag].attached_pointer = block_base_addres + block_size * it_tag;
		block_manage_address[it_tag].attached_process = 0;
	MB_MEMORY_ITERATE_TAG_END
}

void						 memory_traits::shutdown ()
{

}

memory_traits::alloc_pointer memory_traits::allocate  (alloc_process alloc_proc, size_type alloc_count)
{
	alloc_pointer alloc_res = nullptr;

	MB_MEMORY_ITERATE_TAG_BEGIN(it_alloc)
		if(block_manage_address[it_alloc].attached_process == 0)
		{
			for(size_type it_cont_chk ; it_cont_chk < alloc_count ; it_cont_chk++)
			{
				if(block_manage_address[it_alloc + it_cont_chk].attached_process != 0)
					break;
			}


		}
	MB_MEMORY_ITERATE_TAG_END
}

typename memory_traits::alloc_pointer memory_traits::allocate  (alloc_process alloc_proc, size_type alloc_count, alloc_pointer alloc_hint)
{

}

void		  				 memory_traits::deallocate(alloc_process alloc_proc, size_type alloc_count, alloc_pointer alloc_hint)
{

}
