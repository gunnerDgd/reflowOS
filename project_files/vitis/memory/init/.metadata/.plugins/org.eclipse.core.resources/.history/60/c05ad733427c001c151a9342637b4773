#include <cstdint>
#include <cstddef>

#include <xparameters.h>

#define MEMORY_STATIC(type) constexpr static type

namespace reflowOS {
namespace memory   {

	typedef std::uint32_t size_type;
	typedef std::uint32_t pointer_type;

	MEMORY_STATIC(size_type)    megabyte = 1024 * 1024;
	MEMORY_STATIC(size_type)    kilobyte = 1024;

	MEMORY_STATIC(size_type) 	memory_size = 128 * megabyte;
	MEMORY_STATIC(size_type) 	memory_page = 4   * kilobyte;

	MEMORY_STATIC(size_type)    mman_size 		 	   = memory_page * 32;
	MEMORY_STATIC(size_type)    mman_manage_count	   = 32;
	MEMORY_STATIC(size_type)    mman_entire_count	   = (memory_size / memory_page) - mman_manage_count;

	MEMORY_STATIC(size_type)    mman_memory_base       = XPAR_MIG_7SERIES_0_BASEADDR + 128 * megabyte;

	struct mman_page
	{
		typedef std::uint32_t mman_process_id;
		typedef pointer_type  mman_pointer;
	};

	extern mman_page* mman_managed_page;
}
}
