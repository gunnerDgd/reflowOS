#include <reflowOS/boot/boot_memory.hpp>

#define MODULE_STATIC(type) constexpr static type

namespace reflowOS {
namespace boot 	   {

	struct module_entry
	{
		typedef char  	      name_type[112]; // 112 Byte
		typedef std::uint64_t pointer_type  ; // 8 Byte
		typedef std::uint64_t size_type     ; // 8 Byte		==> Total 128 Byte. 8192 / 128 = 64. 64 Module can be added in Boot Progress.

		MODULE_STATIC(pointer_type) base_pointer = XPAR_MIG_7SERIES_0_BASEADDR;
		MODULE_STATIC(pointer_type) table_size   = 4096;
		MODULE_STATIC(pointer_type) module_size  = 4096 * 2;

		name_type    module_name;
		pointer_type module_pointer;
		size_type    module_size;

	};



}
}

template <typename ModuleType>
ModuleType* reflowOS::boot::load_module  (const char*, ModuleType&& module)
{
}

template <typename ModuleType>
ModuleType* reflowOS::boot::unload_module(const char* module_name)
{
}
